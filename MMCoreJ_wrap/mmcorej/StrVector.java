/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mmcorej;

		import java.lang.Iterable;
		import java.util.Iterator;
		import java.util.NoSuchElementException;
		import java.lang.UnsupportedOperationException;
	
public class StrVector implements  Iterable<String> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected StrVector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StrVector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MMCoreJJNI.delete_StrVector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	
		public Iterator<String> iterator() {
			return new Iterator<String>() {
			
				private int i_=0;
			
				public boolean hasNext() {
					return (i_<size());
				}
				
				public String next() throws NoSuchElementException {
					if (hasNext()) {
						++i_;
						return get(i_-1);
					} else {
					throw new NoSuchElementException();
					}
				}
					
				public void remove() throws UnsupportedOperationException {
					throw new UnsupportedOperationException();
				}		
			};
		}
		
		public String[] toArray() {
			if (0==size())
				return new String[0];
			
			String strs[] = new String[(int) size()];
			for (int i=0; i<size(); ++i) {
				strs[i] = get(i);
			}
			return strs;
		}
		
	
  public StrVector() {
    this(MMCoreJJNI.new_StrVector__SWIG_0(), true);
  }

  public StrVector(long n) {
    this(MMCoreJJNI.new_StrVector__SWIG_1(n), true);
  }

  public long size() {
    return MMCoreJJNI.StrVector_size(swigCPtr, this);
  }

  public long capacity() {
    return MMCoreJJNI.StrVector_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    MMCoreJJNI.StrVector_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return MMCoreJJNI.StrVector_isEmpty(swigCPtr, this);
  }

  public void clear() {
    MMCoreJJNI.StrVector_clear(swigCPtr, this);
  }

  public void add(String x) {
    MMCoreJJNI.StrVector_add(swigCPtr, this, x);
  }

  public String get(int i) {
    return MMCoreJJNI.StrVector_get(swigCPtr, this, i);
  }

  public void set(int i, String val) {
    MMCoreJJNI.StrVector_set(swigCPtr, this, i, val);
  }

}

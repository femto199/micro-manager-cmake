/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mmcorej;

public class MMEventCallback {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected MMEventCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MMEventCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MMCoreJJNI.delete_MMEventCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    MMCoreJJNI.MMEventCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    MMCoreJJNI.MMEventCallback_change_ownership(this, swigCPtr, true);
  }

  public MMEventCallback() {
    this(MMCoreJJNI.new_MMEventCallback(), true);
    MMCoreJJNI.MMEventCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void onPropertiesChanged() {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onPropertiesChanged(swigCPtr, this); else MMCoreJJNI.MMEventCallback_onPropertiesChangedSwigExplicitMMEventCallback(swigCPtr, this);
  }

  public void onPropertyChanged(String name, String propName, String propValue) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onPropertyChanged(swigCPtr, this, name, propName, propValue); else MMCoreJJNI.MMEventCallback_onPropertyChangedSwigExplicitMMEventCallback(swigCPtr, this, name, propName, propValue);
  }

  public void onConfigGroupChanged(String groupName, String newConfigName) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onConfigGroupChanged(swigCPtr, this, groupName, newConfigName); else MMCoreJJNI.MMEventCallback_onConfigGroupChangedSwigExplicitMMEventCallback(swigCPtr, this, groupName, newConfigName);
  }

  public void onPixelSizeChanged(double newPixelSizeUm) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onPixelSizeChanged(swigCPtr, this, newPixelSizeUm); else MMCoreJJNI.MMEventCallback_onPixelSizeChangedSwigExplicitMMEventCallback(swigCPtr, this, newPixelSizeUm);
  }

  public void onStagePositionChanged(String name, double pos) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onStagePositionChanged(swigCPtr, this, name, pos); else MMCoreJJNI.MMEventCallback_onStagePositionChangedSwigExplicitMMEventCallback(swigCPtr, this, name, pos);
  }

  public void onStagePositionChangedRelative(String name, double pos) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onStagePositionChangedRelative(swigCPtr, this, name, pos); else MMCoreJJNI.MMEventCallback_onStagePositionChangedRelativeSwigExplicitMMEventCallback(swigCPtr, this, name, pos);
  }

  public void onXYStagePositionChanged(String name, double xpos, double ypos) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onXYStagePositionChanged(swigCPtr, this, name, xpos, ypos); else MMCoreJJNI.MMEventCallback_onXYStagePositionChangedSwigExplicitMMEventCallback(swigCPtr, this, name, xpos, ypos);
  }

  public void onXYStagePositionChangedRelative(String name, double xpos, double ypos) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onXYStagePositionChangedRelative(swigCPtr, this, name, xpos, ypos); else MMCoreJJNI.MMEventCallback_onXYStagePositionChangedRelativeSwigExplicitMMEventCallback(swigCPtr, this, name, xpos, ypos);
  }

  public void onExposureChanged(String name, double newExposure) {
    if (getClass() == MMEventCallback.class) MMCoreJJNI.MMEventCallback_onExposureChanged(swigCPtr, this, name, newExposure); else MMCoreJJNI.MMEventCallback_onExposureChangedSwigExplicitMMEventCallback(swigCPtr, this, name, newExposure);
  }

}
